# This workflow installs the latest version of Terraform CLI and configures the Terraform CLI configuration file
# with an API token for Terraform Cloud (app.terraform.io). On pull request events, this workflow will run
# `terraform init`, `terraform fmt`, and `terraform plan` (speculative plan via Terraform Cloud). On push events
# to the master branch, `terraform apply` will be executed.
#
# Documentation for `hashicorp/setup-terraform` is located here: https://github.com/hashicorp/setup-terraform
#

name: "Terraform"

on:
  push:
    branches:
      - master
  pull_request:
  # schedule:
  #   - cron: "0 0 * * *"

jobs:
  terraform:
    name: "Terraform"
    needs:
      - Travis
    runs-on:
      - self-hosted
      - linux

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: .terraform

    # Checkout the repository to the GitHub Actions runner
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - run: 'echo "$NOMAD_CACERT" > nomad-ca.pem'
        shell: bash
        env:
          NOMAD_CACERT: ${{ secrets.NOMAD_CACERT }}

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        run: terraform fmt -check

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: terraform plan -input=false
        env:
          TF_VAR_hcloud_token: ${{ secrets.HCLOUD_TOKEN }}
          NOMAD_ADDR: ${{ secrets.NOMAD_ADDRESS }}
          NOMAD_TOKEN: ${{ secrets.NOMAD_TOKEN }}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}

        # On push to master, build or change infrastructure according to Terraform configuration files
        # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && (github.event_name == 'push' || github.event_name == 'schedule')
        run: terraform apply -input=false -auto-approve
        env:
          TF_VAR_hcloud_token: ${{ secrets.HCLOUD_TOKEN }}
          NOMAD_ADDR: ${{ secrets.NOMAD_ADDRESS }}
          NOMAD_TOKEN: ${{ secrets.NOMAD_TOKEN }}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
